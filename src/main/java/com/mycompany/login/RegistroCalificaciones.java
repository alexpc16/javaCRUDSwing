/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.login;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author gonzaloferrer
 */
public class RegistroCalificaciones extends javax.swing.JFrame {

    /**
     * Creates new form RegistroCalificaciones
     */
    public RegistroCalificaciones() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        calificacion = new javax.swing.JLabel();
        fechaNacCuadro = new javax.swing.JTextField();
        nombreCuadro = new javax.swing.JTextField();
        notaCuadro = new javax.swing.JTextField();
        agregarBtn = new javax.swing.JButton();
        eliminarBtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        actualizarBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        proyectoSelect = new javax.swing.JComboBox<>();
        buscarBtn = new javax.swing.JButton();

        setTitle("Notas");

        jLabel1.setText("Nombre");

        jLabel2.setText("Fecha Nac");

        calificacion.setText("Calificaci√≥n");

        fechaNacCuadro.setColumns(10);
        fechaNacCuadro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaNacCuadroActionPerformed(evt);
            }
        });

        nombreCuadro.setColumns(10);

        notaCuadro.setColumns(10);
        notaCuadro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notaCuadroActionPerformed(evt);
            }
        });

        agregarBtn.setText("agregar");
        agregarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarBtnActionPerformed(evt);
            }
        });

        eliminarBtn.setText("eliminar");
        eliminarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarBtnActionPerformed(evt);
            }
        });

        jButton3.setText("borrar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        actualizarBtn.setText("actualizar");
        actualizarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("proyecto");

        proyectoSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "entregado", "no entregado" }));

        buscarBtn.setText("buscar");
        buscarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(agregarBtn)
                    .addComponent(calificacion)
                    .addComponent(jLabel3))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(notaCuadro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(proyectoSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fechaNacCuadro)
                                    .addComponent(nombreCuadro))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buscarBtn)
                                .addGap(24, 24, 24))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(eliminarBtn)
                        .addGap(29, 29, 29)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(actualizarBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nombreCuadro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarBtn))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fechaNacCuadro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calificacion)
                    .addComponent(notaCuadro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(proyectoSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregarBtn)
                    .addComponent(eliminarBtn)
                    .addComponent(jButton3)
                    .addComponent(actualizarBtn))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarBtnActionPerformed
        
        Conexion conexion = new Conexion("proyFinalJava");
        try {
            
            
            Connection conexionRegistro = conexion.conectar();
            
            // accedemos a los cuadros de texto (jtextField) y usamos su metodo get para
            // obtener el texto dentro de ellos que es lo que el usuario enviara
            
            String nombreUsuarioNuevo = nombreCuadro.getText();
            String fechaNacNueva = fechaNacCuadro.getText();
            String notaNueva = notaCuadro.getText();
            // el metodo getSelectItem retorna un Object que convertimos a String usando el casting
            String proyectoNuevo = (String) proyectoSelect.getSelectedItem();
            
            // Creamos una consulta como String que servira para preparar la consulta a enviar a la 
            // base de datos
            
            String agregarRegistroAlumno = "INSERT INTO alumnos (nombre, fecha_nac, nota, proyecto) VALUES (?,?,?,?);";
            
            // Realizamos la preparacion de la consulta, la cual contiene espacios en blanco
            // dados por los simbolos de ?, estos datos seran llenados por los valores ingresados en los
            // cuadros de texto
            
            PreparedStatement agregarRegistroSQL = conexionRegistro.prepareStatement(agregarRegistroAlumno);
            
            // Cambiamos los simbolos de ? por datos a ingresar en la consulta, el numero indica la posicion del ? 
            
            agregarRegistroSQL.setString(1,nombreUsuarioNuevo);
            agregarRegistroSQL.setString(2,fechaNacNueva);
            // Convertimos notaNueva en entero para agregarlo a la consulta ya que en la base de datos 
            // nota es de tipo entero
            
            
            agregarRegistroSQL.setInt(3,Integer.parseInt(notaNueva));
            agregarRegistroSQL.setString(4, proyectoNuevo);
            
            
            
                       
            
            int filasInsertadas = agregarRegistroSQL.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(RegistroCalificaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        finally{
            conexion.cerrarConexion();
            System.out.println("cerrada");
        }
        
        
        
    }//GEN-LAST:event_agregarBtnActionPerformed

    private void fechaNacCuadroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaNacCuadroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaNacCuadroActionPerformed

    private void notaCuadroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notaCuadroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_notaCuadroActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        nombreCuadro.setText("");
        notaCuadro.setText("");
        fechaNacCuadro.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void actualizarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarBtnActionPerformed
        // TODO add your handling code here:
        Conexion conexion = new Conexion("proyFinalJava");
    try {
        Connection conexionRegistro = conexion.conectar();

        // Acceder a los cuadros de texto para obtener los nuevos valores
        String nombreUsuarioActualizar = nombreCuadro.getText();
        String nuevaFechaNac = fechaNacCuadro.getText();
        String nuevaNota = notaCuadro.getText();
        String nuevoProyecto = proyectoSelect.getSelectedItem().toString();

        // Crear la consulta SQL para actualizar los datos del usuario por nombre
        String actualizarRegistroAlumno = "UPDATE alumnos SET fecha_nac = ?, nota = ?, proyecto = ? WHERE nombre = ?;";

        // Realizar la preparaci√≥n de la consulta
        PreparedStatement actualizarRegistroSQL = conexionRegistro.prepareStatement(actualizarRegistroAlumno);

        // Establecer los nuevos valores en la consulta
        actualizarRegistroSQL.setString(1, nuevaFechaNac);
        actualizarRegistroSQL.setString(2, nuevaNota);
        actualizarRegistroSQL.setString(3, nuevoProyecto);
        actualizarRegistroSQL.setString(4, nombreUsuarioActualizar);

        // Ejecutar la consulta para actualizar el registro
        int filasActualizadas = actualizarRegistroSQL.executeUpdate();

        if (filasActualizadas > 0) {
            System.out.println("Registro actualizado correctamente");
        } else {
            System.out.println("No se encontr√≥ ning√∫n registro con el nombre proporcionado");
        }
    } catch (SQLException ex) {
        Logger.getLogger(RegistroCalificaciones.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        conexion.cerrarConexion();
        System.out.println("Conexi√≥n cerrada");
    }
        
     
       

        
    }//GEN-LAST:event_actualizarBtnActionPerformed

    private void eliminarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarBtnActionPerformed
        // TODO add your handling code here:
         Conexion conexion = new Conexion("proyFinalJava");
    try {
        Connection conexionRegistro = conexion.conectar();

        // Acceder al cuadro de texto para obtener el nombre del usuario a eliminar
        String nombreUsuarioEliminar = nombreCuadro.getText();

        // Crear la consulta SQL para eliminar el registro por nombre
        String eliminarRegistroAlumno = "DELETE FROM alumnos WHERE nombre = ?;";

        // Realizar la preparaci√≥n de la consulta
        PreparedStatement eliminarRegistroSQL = conexionRegistro.prepareStatement(eliminarRegistroAlumno);

        // Establecer el nombre del usuario a eliminar en la consulta
        eliminarRegistroSQL.setString(1, nombreUsuarioEliminar);

        // Ejecutar la consulta para eliminar el registro
        int filasEliminadas = eliminarRegistroSQL.executeUpdate();

        if (filasEliminadas > 0) {
            System.out.println("Registro eliminado correctamente");
        } else {
            System.out.println("No se encontr√≥ ning√∫n registro con el nombre proporcionado");
        }
    } catch (SQLException ex) {
        Logger.getLogger(RegistroCalificaciones.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        conexion.cerrarConexion();
        System.out.println("Conexi√≥n cerrada");
    }
    }//GEN-LAST:event_eliminarBtnActionPerformed

    private void buscarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarBtnActionPerformed
        // TODO add your handling code here:
            Conexion conexion = new Conexion("proyFinalJava");
    try {
        Connection conexionRegistro = conexion.conectar();

        // Acceder al cuadro de texto para obtener el nombre del usuario a buscar
        String nombreUsuarioBuscar = nombreCuadro.getText();

        // Crear la consulta SQL para obtener los datos del usuario por nombre
        String consultarRegistroAlumno = "SELECT * FROM alumnos WHERE nombre = ?;";

        // Realizar la preparaci√≥n de la consulta
        PreparedStatement consultarRegistroSQL = conexionRegistro.prepareStatement(consultarRegistroAlumno);

        // Establecer el nombre del usuario a buscar en la consulta
        consultarRegistroSQL.setString(1, nombreUsuarioBuscar);

        // Ejecutar la consulta para obtener los resultados
        ResultSet resultadoConsulta = consultarRegistroSQL.executeQuery();

        // Verificar si hay resultados
        if (resultadoConsulta.next()) {
            // Si hay resultados, mostrarlos en los cuadros de texto
            nombreCuadro.setText(resultadoConsulta.getString("nombre"));
            fechaNacCuadro.setText(resultadoConsulta.getString("fecha_nac"));
            notaCuadro.setText(resultadoConsulta.getString("nota"));
            proyectoSelect.setSelectedItem(resultadoConsulta.getString("proyecto"));
        } else {
            // Si no hay resultados, limpiar los cuadros de texto
            nombreCuadro.setText("");
            fechaNacCuadro.setText("");
            notaCuadro.setText("");
            proyectoSelect.setSelectedItem(null);
            System.out.println("No se encontr√≥ ning√∫n registro con el nombre proporcionado");
        }
    } catch (SQLException ex) {
        Logger.getLogger(RegistroCalificaciones.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        conexion.cerrarConexion();
        System.out.println("Conexi√≥n cerrada");
    }

    }//GEN-LAST:event_buscarBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroCalificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroCalificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroCalificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroCalificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroCalificaciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizarBtn;
    private javax.swing.JButton agregarBtn;
    private javax.swing.JButton buscarBtn;
    private javax.swing.JLabel calificacion;
    private javax.swing.JButton eliminarBtn;
    private javax.swing.JTextField fechaNacCuadro;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField nombreCuadro;
    private javax.swing.JTextField notaCuadro;
    private javax.swing.JComboBox<String> proyectoSelect;
    // End of variables declaration//GEN-END:variables
}
